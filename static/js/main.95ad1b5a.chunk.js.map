{"version":3,"sources":["assets/user-1.jpg","components/header.component.jsx","components/navigation.component.jsx","components/notification.component.jsx","components/task1.component.jsx","components/settings.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","User","alt","params","allowMultipleExpanded","Navigation","to","Notification","type","checked","React","Component","Task1","value","id","rows","cols","Settings","handleSubmit","event","state","name","dob","profession","designation","preventDefault","setState","console","log","handleChange","target","this","onSubmit","onChange","placeholder","maxLength","pattern","required","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95ad1b5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-1.516a08d9.jpg\";","import React from \"react\";\nimport \"./header.styles.scss\";\nimport User from \"../assets/user-1.jpg\";\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <div className=\"header__title\">\n        <h1>Jupiter</h1>\n      </div>\n\n      <div className=\"header__profile\">\n        <img src={User} alt=\"profile\" />\n\n        <p>Chander Kumar</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./navigation.styles.scss\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\n\nconst params = {\n  allowMultipleExpanded: false,\n};\n\nconst Navigation = () => {\n  return (\n    <div className=\"navigation\">\n      <div className=\"navigation__accordion\">\n        <Accordion params={params}>\n          <AccordionItem>\n            <AccordionItemHeading>\n              <AccordionItemButton>Profile</AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel>\n              <Link to=\"/\">\n                <p>Settings</p>\n              </Link>\n            </AccordionItemPanel>\n            <AccordionItemPanel>\n              <Link to=\"notifications\">\n                <p>Notifications</p>\n              </Link>\n            </AccordionItemPanel>\n          </AccordionItem>\n          <AccordionItem>\n            <AccordionItemHeading>\n              <AccordionItemButton>My Tasks</AccordionItemButton>\n            </AccordionItemHeading>\n            <AccordionItemPanel>\n              <Link to=\"/task1\">\n                <p>Task 1</p>\n              </Link>\n            </AccordionItemPanel>\n            <AccordionItemPanel>\n              <div>\n                <p>Task 2</p>\n              </div>\n            </AccordionItemPanel>\n          </AccordionItem>\n        </Accordion>\n      </div>\n      <div className=\"navigation__copyright\">Designed by Gobind Jha</div>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./settings.styles.scss\";\nimport \"./notification.styles.scss\";\n\nclass Notification extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <h2>Notification</h2>\n        <form className=\"setting__form\">\n          <div className=\"settings__fields\">\n            <p>Send All Alerts</p>\n            <label className=\"switch\">\n              <input type=\"checkbox\" checked />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          <div className=\"settings__fields\">\n            <p>Alerts Only Task Success</p>\n            <label className=\"switch\">\n              <input type=\"checkbox\" />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          <div className=\"settings__fields\">\n            <p>Alerts Only For Failed Tasks</p>\n            <label className=\"switch\">\n              <input type=\"checkbox\" />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          <div className=\"settings__fields\">\n            <p>I Do Not Want Any Alerts</p>\n            <label className=\"switch\">\n              <input type=\"checkbox\" />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          <div className=\"settings__button-box\">\n            <button className=\"settings__button --cancel\">Cancel</button>\n            <button className=\"settings__button --submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","import React from \"react\";\nimport \"./settings.styles.scss\";\nimport \"./task1.styles.scss\";\n\nclass Task1 extends React.Component {\n  render() {\n    return (\n      <div className=\"settings\">\n        <h2>Task 1</h2>\n        <form className=\"setting__form\">\n          <div className=\"settings__fields\">\n            <label>Source Name</label>\n            <select>\n              <option value=\"\">Source 1</option>\n              <option value=\"\">Source 2</option>\n              <option value=\"\">Source 3</option>\n              <option value=\"\">Source 4</option>\n            </select>\n          </div>\n          <div className=\"settings__fields\">\n            <label>Enable Logging</label>\n            <label className=\"switch\">\n              <input type=\"checkbox\" />\n              <span className=\"slider round\"></span>\n            </label>\n          </div>\n          <div className=\"settings__fields\">\n            <label>Provide SQL</label>\n            <textarea id=\"message\" rows=\"6\" cols=\"50\" className=\"customtext\" />\n          </div>\n          <div className=\"settings__fields\">\n            <label>Target Result</label>\n            <select>\n              <option value=\"\">Result 1</option>\n              <option value=\"\">Result 2</option>\n              <option value=\"\">Result 3</option>\n              <option value=\"\">Result 4</option>\n            </select>\n          </div>\n          <div className=\"settings__button-box\">\n            <button className=\"settings__button --cancel\">Cancel</button>\n            <button className=\"settings__button --submit\">Submit</button>\n            <button className=\"settings__button --submit\">Validate</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Task1;\n","import React from \"react\";\nimport \"./settings.styles.scss\";\n\nclass Settings extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      dob: \"\",\n      profession: \"\",\n      designation: \"\",\n    };\n  }\n\n  handleSubmit = (event) => {\n    const { name, dob, profession, designation } = this.state;\n    event.preventDefault();\n\n    this.setState({\n      name: \"\",\n      dob: \"\",\n      profession: \"\",\n      designation: \"\",\n    });\n\n    console.log({ name, dob, profession, designation });\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { name, dob, profession, designation } = this.state;\n    return (\n      <div className=\"settings\">\n        <h2>Profile Info</h2>\n        <form className=\"setting__form\" onSubmit={this.handleSubmit}>\n          <div className=\"settings__fields\">\n            <label>Name</label>\n            <input\n              onChange={this.handleChange}\n              name=\"name\"\n              value={name}\n              type=\"text\"\n              placeholder=\"Name\"\n              maxLength=\"30\"\n              pattern=\"[A-Za-z]{0,}\"\n              required\n            />\n          </div>\n          <div className=\"settings__fields\">\n            <label>DOB</label>\n            <input\n              onChange={this.handleChange}\n              name=\"dob\"\n              value={dob}\n              type=\"date\"\n              placeholder=\"DOB\"\n              required\n            />\n          </div>\n          <div className=\"settings__fields\">\n            <label>Profession</label>\n            <input\n              onChange={this.handleChange}\n              name=\"profession\"\n              value={profession}\n              type=\"text\"\n              placeholder=\"Profession\"\n              pattern=\"[A-Za-z]{0,}\"\n              required\n            />\n          </div>\n          <div className=\"settings__fields\">\n            <label>Designation</label>\n            <input\n              onChange={this.handleChange}\n              name=\"designation\"\n              value={designation}\n              type=\"text\"\n              placeholder=\"Designation\"\n              pattern=\"[A-Za-z]{0,}\"\n              required\n            />\n          </div>\n          <div className=\"settings__button-box\">\n            <button type=\"reset\" className=\"settings__button --cancel\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"settings__button --submit\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Settings;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./styles/main.styles.scss\";\n\nimport Header from \"./components/header.component\";\nimport Navigation from \"./components/navigation.component\";\nimport Notification from \"./components/notification.component\";\nimport Task1 from \"./components/task1.component\";\nimport Settings from \"./components/settings.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={Settings} />\n        <Route path=\"/notifications\" component={Notification} />\n        <Route path=\"/task1\" component={Task1} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}