{"version":3,"sources":["assets/user-1.jpg","components/header.component.jsx","components/navigation.component.jsx","components/notification.component.jsx","components/task1.component.jsx","components/settings.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","User","alt","params","Navigation","to","Notification","type","checked","React","Component","Task1","value","id","rows","cols","Settings","handleSubmit","event","state","name","dob","profession","designation","preventDefault","setState","console","log","handleChange","target","this","onSubmit","onChange","placeholder","maxLength","pattern","required","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2058ddd5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user-1.516a08d9.jpg\";","import React from 'react';\nimport './header.styles.scss';\nimport User from '../assets/user-1.jpg';\nconst Header= ( ) => {\n    return(\n        <div className='header'>\n            <div className=\"header__title\">\n                <h1>Jupiter</h1>\n            </div>\n\n            <div className=\"header__profile\">\n             \n                    <img src={User} alt='profile'/>\n            \n                    <p>Chander Kumar</p>\n            </div>\n\n            \n        </div>\n    );\n}\n\nexport default Header;\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './navigation.styles.scss';\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\n \n\n const params ={\n    \"allowMultipleExpanded\" : false\n }\n\nconst Navigation = () =>{\n    return(\n        <div className=\"navigation\">\n            <div className='navigation__accordion'>\n             <Accordion params={params} >\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        Profile\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <Link to='/'>\n                       <p>Settings</p>\n                    </Link>\n                </AccordionItemPanel>\n                <AccordionItemPanel>\n                    <Link to='notifications'>\n                       <p>Notifications</p>\n                    </Link>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                        My Tasks\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <Link to='/task1'>\n                       <p>Task 1</p>\n                    </Link>\n                </AccordionItemPanel>\n                <AccordionItemPanel>\n                    <div>\n                       <p>Task 2</p>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n        </Accordion>\n            </div>\n            <div className='navigation__copyright'>\n                Designed by Gobind Jha\n                </div>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from 'react';\nimport './settings.styles.scss';\nimport './notification.styles.scss';\n\nclass Notification extends React.Component{\n\n\n    render(){\n        return(\n            \n            <div className=\"settings\">\n                <h2>Notification</h2>\n                <form className=\"setting__form\">\n                    <div className=\"settings__fields\">\n                        <p>Send All Alerts</p>\n                        <label className=\"switch\" >\n                            <input type=\"checkbox\" checked/>\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div className=\"settings__fields\">\n                        <p>Alerts Only Task Success</p>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\"/>\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div className=\"settings__fields\">\n                        <p>Alerts Only For Failed Tasks</p>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\"/>\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div className=\"settings__fields\">\n                        <p>I Do Not Want Any Alerts</p>\n                        <label className=\"switch\">\n                            <input type=\"checkbox\"/>\n                            <span className=\"slider round\"></span>\n                        </label>\n                    </div>\n                    <div className='settings__button-box'>\n                        <button className='settings__button --cancel'>Cancel</button>\n                        <button className='settings__button --submit'>Submit</button>\n                    </div>  \n\n                </form>  \n\n            </div>\n        );\n    }\n}\n\nexport default Notification;","import React from 'react';\nimport './settings.styles.scss';\nimport './task1.styles.scss';\n\nclass Task1 extends React.Component{\n\n\n    render(){\n        return(\n            \n            <div className=\"settings\">\n                <h2>Task 1</h2>\n                <form className=\"setting__form\">\n                <div className=\"settings__fields\">\n                    <label>Source Name</label>\n                    <select>\n                        <option  value=''>Source 1</option>\n                        <option  value=''>Source 2</option>\n                        <option value=''>Source 3</option>\n                        <option value=''>Source 4</option>\n                    </select>\n                </div>\n                <div className=\"settings__fields\">\n                    <label>Enable Logging</label>\n                    <label className=\"switch\">\n                            <input type=\"checkbox\"/>\n                            <span className=\"slider round\"></span>\n                        </label>\n                </div>\n                <div className=\"settings__fields\">\n                    <label>Provide SQL</label>\n                    <textarea id='message' rows='6' cols='50'  className='customtext'/>\n                </div>\n                <div className=\"settings__fields\">\n                    <label>Target Result</label>\n                    <select>\n                        <option value=''>Result 1</option>\n                        <option value=''>Result 2</option>\n                        <option value=''>Result 3</option>\n                        <option value=''>Result 4</option>\n                    </select>\n                </div>\n                <div className='settings__button-box'>\n                    <button className='settings__button --cancel'>Cancel</button>\n                    <button className='settings__button --submit'>Submit</button>\n                    <button className='settings__button --submit'>Validate</button>\n                </div>  \n\n                </form>  \n\n            </div>\n        );\n    }\n}\n\nexport default Task1;","import React from 'react';\nimport './settings.styles.scss';\n\nclass Settings extends React.Component{\n\n    constructor(){\n        super();\n\n        this.state = {\n            name:'',\n            dob:'',\n            profession:'',\n            designation:''\n        }\n    }\n\n    handleSubmit = event =>{\n        const {name, dob, profession,designation}=this.state;\n        event.preventDefault();\n\n        this.setState({\n            name:'',\n            dob:'',\n            profession:'',\n            designation:''\n        })\n\n        console.log({name,dob,profession,designation});\n    }\n\n\n    handleChange = event =>{\n        const {value,name} = event.target;\n        this.setState({[name]:value});\n    }\n\n\n\n\n    render(){\n        const {name, dob, profession, designation} = this.state; \n        return(\n            \n            <div className=\"settings\">\n                <h2>Profile Info</h2>\n                <form className=\"setting__form\" onSubmit={this.handleSubmit} >\n                <div className=\"settings__fields\">\n                    <label>Name</label>\n                    <input  onChange={this.handleChange} name='name' value={name} type='text' placeholder='Name' maxLength='30'  pattern=\"[A-Za-z]{0,}\" required/>\n                </div>\n                <div className=\"settings__fields\">\n                    <label>DOB</label>\n                    <input  onChange={this.handleChange} name='dob' value={dob} type='date' placeholder='DOB' required/>\n                </div>\n                <div className=\"settings__fields\">\n                    <label>Profession</label>\n                    <input  onChange={this.handleChange}  name='profession' value={profession} type='text' placeholder='Profession'  pattern=\"[A-Za-z]{0,}\" required/>\n                </div>\n                <div className=\"settings__fields\">\n                    <label>Designation</label>\n                    <input  onChange={this.handleChange} name='designation' value={designation} type='text' placeholder='Designation' pattern=\"[A-Za-z]{0,}\" required/>\n                </div>\n                <div className='settings__button-box'>\n                    <button type='reset' className='settings__button --cancel'>Cancel</button>\n                    <button type='submit' className='settings__button --submit'>Submit</button>\n                </div>  \n\n                </form>  \n\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.css';\nimport './styles/main.styles.scss';\n\nimport Header from './components/header.component';\nimport Navigation from './components/navigation.component';\nimport Notification from './components/notification.component';\nimport Task1 from './components/task1.component';\nimport Settings from './components/settings.component';\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Navigation/>\n      <Switch>\n\n        <Route exact path='/' component={Settings}/>\n        <Route  path='/notifications' component={Notification}/>\n        <Route  path='/task1' component={Task1}/>\n      \n      </Switch>  \n      \n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n <BrowserRouter> \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n </BrowserRouter> ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}